name: build README.md

on:
  schedule:
    - cron: "0 */12 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if \
            [ "${{ secrets.TS_PROJECT_IDD != '' }}" = "true" ] \
            && [ "${{ secrets.TS_AUTH_TOKEN != '' }}" = "true" ]; \
          then \
            echo "TakeShape secrets are set"; \
            echo "::set-output name=is-initialized::true"; \
          else \
            echo "TakeShape secrets are NOT set"; \
            echo "::set-output name=is-initialized::false"; \
          fi

  setup:
    runs-on: ubuntu-latest
    needs: [initialize]
    if: needs.initialize.outputs.is-initialized == false
    steps:
      - uses: actions/checkout@v2

      - run: |
          echo "# TwitHub" > README.md
          echo "Looks like your project hasn't been initialized yet! Don't worry, this is easy." >> README.md
          echo "" >> README.md
          echo "## Installing" >> README.md
          echo "" >> README.md
          echo "1. Click this button! >>> <a href="//app.takeshape.io/add-to-takeshape?repo=https://github.com/${GITHUB_REPOSITORY}/tree/master/.takeshape"><img alt="Deploy To TakeShape" src="https://images.takeshape.io/2cccc825-70be-431c-9ba0-10ab38ecd3a7/dev/8e2f7bda-0e08-4ede-a546-6df59be6a8bb/Deploy%20to%20TakeShape%402x.png?auto=format%2Ccompress" width=205 height=38></a>" >> README.md
          echo "2. Set up your [TakeShape](https://takeshape.io) project (free account required)" >> README.md
          echo "3. In your TakeShape project named `TwitHub` click on the TwitHub dropdown in the upper left, then click `API Keys`" >> README.md
          echo "4. Create an API KEY with `CI` permissions, save it somewhere safe." >> README.md
          echo "5. Copy the PROJECT ID from any TakeShape URL (hint, it looks like this `b9b1f9b0-313e-45d7-a92d-42dbbdec5dd0`" >> README.md
          echo "6. Go to your GitHub secrets by [clicking here](https://github.com/${GITHUB_REPOSITORY}/settings/secrets) and create two secrets:" >> README.md
          echo "  - `TS_PROJECT_ID` = `<your project id>`" >> README.md
          echo "  - `TS_AUTH_TOKEN` = `<your api key>`" >> README.md
          echo "7. That's it! Twit away..." >> README.md

      - name: great job!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git pull --ff-only \
          && git add -A \
          && git diff HEAD --quiet --exit-code \
          || git commit -am "great job!" \
          && git push

  build:
    runs-on: ubuntu-latest
    needs: [initialize]
    if: needs.initialize.outputs.is-initialized == true
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: takeshape build
        env:
          TS_PROJECT_ID: ${{ secrets.TS_PROJECT_ID }}
          TS_AUTH_TOKEN: ${{ secrets.TS_AUTH_TOKEN }}
        run: |
          test -d static || mkdir static
          npx --package @takeshape/cli -c "tsg build"

      - uses: mshick/fast-envsubst@v1
        with:
          in-file: README.md
          out-file: README.md

      - name: great job!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git pull --ff-only \
          && git add -A \
          && git diff HEAD --quiet --exit-code \
          || git commit -am "great job!" \
          && git push
