name: build README.md

on:
  schedule:
    - cron: "0 */12 * * *"
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  initialize:
    runs-on: ubuntu-latest
    steps:
      - run: |
          if \
            [ "${{ env.TS_PROJECT_ID != '' }}" = "true" ] \
            && [ "${{ env.TS_AUTH_TOKEN != '' }}" = "true" ]; \
          then \
            echo "TakeShape secrets are set" \
            echo "::set-output name=enable-builds::true" \
          else \
            echo "TakeShape secrets are NOT set" \
            echo "::set-output name=enable-builds::false" \
          fi

  setup:
    runs-on: ubuntu-latest
    needs: [initialize]
    if: needs.initialize.outputs.enable-builds == 'false'
    steps:
      - run: |
          echo "BUILDS NOT ENABLED"

  build:
    runs-on: ubuntu-latest
    needs: [initialize]
    if: needs.initialize.outputs.enable-builds == 'true'
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: "12"

      - name: takeshape build
        env:
          TS_PROJECT_ID: ${{ secrets.TS_PROJECT_ID }}
          TS_AUTH_TOKEN: ${{ secrets.TS_AUTH_TOKEN }}
        run: |
          test -d static || mkdir static
          npx --package @takeshape/cli -c "tsg build"

      - uses: mshick/fast-envsubst@v1
        with:
          in-file: README.md
          out-file: README.md

      - name: great job!
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          git pull --ff-only \
          && git add -A \
          && git diff HEAD --quiet --exit-code \
          || git commit -am "great job" \
          && git push
